Item {
                        height: rightSide.height - this.y
                        width: rightSide.width
                        x: 0
                        y: 48

                        ListModel {
                            id: nameModel
                            ListElement { name: "Alice"; surname: "Jones"; age: "24" }
                            ListElement { name: "Bob"; surname: "Dale"; age: "26" }
                            ListElement { name: "Jane"; surname: "Fox"; age: "20" }
                            ListElement { name: "Victor"; surname: "Krum"; age: "28" }
                            ListElement { name: "Wendy"; surname: "Spring"; age: "22" }
                            ListElement { name: "Alice"; surname: "Jones"; age: "24" }
                            ListElement { name: "Bob"; surname: "Dale"; age: "26" }
                            ListElement { name: "Jane"; surname: "Fox"; age: "20" }
                            ListElement { name: "Victor"; surname: "Krum"; age: "28" }
                            ListElement { name: "Wendy"; surname: "Spring"; age: "22" }
                            ListElement { name: "Alice"; surname: "Jones"; age: "24" }
                            ListElement { name: "Bob"; surname: "Dale"; age: "26" }
                            ListElement { name: "Jane"; surname: "Fox"; age: "20" }
                            ListElement { name: "Victor"; surname: "Krum"; age: "28" }
                            ListElement { name: "Wendy"; surname: "Spring"; age: "22" }
                            ListElement { name: "Alice"; surname: "Jones"; age: "24" }
                            ListElement { name: "Bob"; surname: "Dale"; age: "26" }
                            ListElement { name: "Jane"; surname: "Fox"; age: "20" }
                            ListElement { name: "Victor"; surname: "Krum"; age: "28" }
                            ListElement { name: "Wendy"; surname: "Spring"; age: "22" }
                            ListElement { name: "Alice"; surname: "Jones"; age: "24" }
                            ListElement { name: "Bob"; surname: "Dale"; age: "26" }
                            ListElement { name: "Jane"; surname: "Fox"; age: "20" }
                            ListElement { name: "Victor"; surname: "Krum"; age: "28" }
                            ListElement { name: "Wendy"; surname: "Spring"; age: "22" }
                            ListElement { name: "Alice"; surname: "Jones"; age: "24" }
                            ListElement { name: "Bob"; surname: "Dale"; age: "26" }
                            ListElement { name: "Jane"; surname: "Fox"; age: "20" }
                            ListElement { name: "Victor"; surname: "Krum"; age: "28" }
                            ListElement { name: "Wendy"; surname: "Spring"; age: "22" }
                        }

                        Component {
                            id: nameDelegate

                            Rectangle {
                                readonly property ListView __lv: ListView.view
                                color: __lv.currentIndex == index ? "#aaa0b0c0" : "#aaffffff"
                                height: txt.implicitHeight
                                width: rightSide.width - 12
                                radius: 12

                                RowLayout {
                                    id: layout
                                    anchors { left: parent.left; top: parent.top; bottom: parent.bottom }
                                    width: parent.width * 0.8

                                    Item {
                                        x: 0
                                        Text {
                                            padding: 8
                                            id: txt
                                            text: model.name
                                            font.pixelSize: 24

//                                            Component.onCompleted: console.log("Welcome", model.index, model.name, model.surname, model.age)
//                                            Component.onDestruction: console.log("Bye", model.index, model.name, model.surname, model.age)
                                        }
                                    }

                                    Item {
                                        x: parent.width * 0.33
                                        Text {
                                            padding: 8
                                            id: txt2
                                            text: model.surname
                                            font.pixelSize: 24
                                        }
                                    }

                                    Item {
                                        x: parent.width * 0.77
                                        Text {
                                            padding: 8
                                            id: txt3
                                            text: model.age
                                            font.pixelSize: 24
                                        }
                                    }
                                }

                                RowLayout {
                                    id: layout2
                                    anchors { right: parent.right; top: parent.top; bottom: parent.bottom }
                                    spacing: 2
                                    width: parent.width * 0.25
                                    z: 1

                                    Button {
                                        text: "Edit"

                                        MouseArea {
                                            anchors.fill: parent
                                            onClicked: console.log("Clicked Edit at:", model.index, model.name)
                                        }
                                    }

                                    Button {
                                        text: "X"

                                        MouseArea {
                                            anchors.fill: parent
                                            onClicked: console.log("Clicked X at:", model.index, model.name)
                                        }
                                    }
                                }

                                MouseArea {
                                    anchors.fill: parent
                                    onClicked: __lv.currentIndex = index
                                }
                            }
                        }

                        ListView {
                            anchors.fill: parent
                            model: nameModel
                            delegate: nameDelegate
                            clip: true
                            cacheBuffer: 48
                            spacing: 4

                            flickableDirection: Flickable.VerticalFlick
                            boundsBehavior: Flickable.StopAtBounds

                            ScrollBar.vertical: vbar

                            ScrollBar {
                                id: vbar
                                active: true
                                orientation: Qt.Vertical
                                policy: ScrollBar.AlwaysOn
                                anchors { top: parent.top; right: parent.right; bottom: parent.bottom }
                            }
                        }
                    }
