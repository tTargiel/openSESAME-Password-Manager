import QtQuick 2.0

Item {
    Component {
        id: nameDelegate
        
        Rectangle {
            readonly property ListView __lv: ListView.view
            color: __lv.currentIndex == index ? "#aaa0b0c0" : "#aaffffff"
            height: txt.implicitHeight
            width: rightSide.width - 12
            radius: 12
            
            RowLayout {
                id: layout
                anchors { left: parent.left; top: parent.top; bottom: parent.bottom }
                width: parent.width * 0.8
                
                Item {
                    x: 0
                    Text {
                        padding: 8
                        id: txt
                        text: modelData.id
                        font.pixelSize: 24
                        
                        //                                            Component.onCompleted: console.log("Welcome", model.index, model.name, model.surname, model.age)
                        //                                            Component.onDestruction: console.log("Bye", model.index, model.name, model.surname, model.age)
                    }
                }
                
                Item {
                    x: parent.width * 0.33
                    Text {
                        padding: 8
                        id: txt2
                        text: modelData.value                    // Using structure properties
            onTextChanged: modelData.value = text    // Changing structure properties
        font.pixelSize: 24
                    }
                }
                
                Item {
                    x: parent.width * 0.77
                    Text {
                        padding: 8
                        id: txt3
                        text: modelData.value                    // Using structure properties
            onTextChanged: modelData.value = text    // Changing structure properties
        font.pixelSize: 24
                    }
                }
            }
            
            RowLayout {
                id: layout2
                anchors { right: parent.right; top: parent.top; bottom: parent.bottom }
                spacing: 2
                width: parent.width * 0.25
                z: 1
                
                Button {
                    text: "Edit"
                    
                    MouseArea {
                        anchors.fill: parent
                        onClicked: modelData.doubleId()
                    }
                }
                
                Button {
                    text: "X"
                    
                    MouseArea {
                        anchors.fill: parent
                        onClicked: console.log("Clicked X at:", model.index, model.name)
                    }
                }
            }
            
            MouseArea {
                anchors.fill: parent
                onClicked: __lv.currentIndex = index
            }
        }
    }
}
